pipeline {
    agent { docker { image 'python:3-alpine' } }
    stages {
        stage('Git') {
            steps{
                // echo 'Getting the code from GitHub...'
                git 'https://github.com/daniera3/NEDD-API-server.git'
            }
        }
        stage('Requirements'){
            steps{
                withEnv(["HOME=${env.WORKSPACE}"]) {
                    //echo 'Installing Requirements...'
                    sh 'pip3.7 install -U -r requirements.txt --user'
		    sh 'pip3 install --user -U requests'
                }
            }
        }
        stage('Run Tests'){
            steps{
                // echo 'Testing User app...'
		withEnv(["HOME=${env.WORKSPACE}"]) {
	 	        sh "python3.7 -m pytest -v  --junitxml=./nosetests.xml"
			}
            }
	  }
	  stage('Build package') {
            when {
                expression {
                    currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
            steps {
	    withEnv(["HOME=${env.WORKSPACE}"]) {
                sh  ' python3 website.py bdist_wheel &  '
		}
            }
            post {
                always {
                    
		    withEnv(["HOME=${env.WORKSPACE}"]) {
                    archiveArtifacts allowEmptyArchive: true, artifacts: 'dist/*whl', fingerprint: true, onlyIfSuccessful: true
		    }
                }
            }
        }
	stage("Deploy to PyPI") {

            steps {
                sh "twine upload dist/*"
            }
        }
        }
            post {
        always {
	withEnv(["HOME=${env.WORKSPACE}"]) {
	    junit allowEmptyResults: true, keepLongStdio: true, testResults: '**/nosetests.xml'
	    }
        }
        failure {
            mail to: 'danirabinovich123@gmail.com', subject: 'The Pipeline failed :(',body:'test'

        }
    }

    
    }//close pipline

